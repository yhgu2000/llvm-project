include "llvm/Target/Target.td" // 固定写法

//===----------------------------------------------------------------------===//
// Registers
//===----------------------------------------------------------------------===//

// 定义我们有哪些寄存器
include "GyhRegisterInfo.td"

//===----------------------------------------------------------------------===//
// Instructions
//===----------------------------------------------------------------------===//

// 定义我们有哪些指令
include "GyhInstrInfo.td"

def GyhInstrInfo : InstrInfo; // 固定写法

//===----------------------------------------------------------------------===//
// Processors
//===----------------------------------------------------------------------===//

// 定义我们有哪些处理器
def : Processor<  // 我们并不需要给这个记录命名，所以直接写 def :
  "generic",      // 处理器名称，我们效仿其它后端的命名，就叫 generic 好了
  NoItineraries,  // 调度行程表，和调度算法有关，不给的话就写 NoItineraries
  []              // 特性列表，我们没有任何特性，直接给一个空列表
>;

//===----------------------------------------------------------------------===//
// Target
//===----------------------------------------------------------------------===//

// 算是固定写法，综合以上所有内容，定义我们的后端
def Gyh : Target {
  let InstructionSet = GyhInstrInfo;
}
